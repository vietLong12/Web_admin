[{"D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\(full-page)\\auth\\access\\page.tsx":"1","D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\(full-page)\\auth\\error\\page.tsx":"2","D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\(full-page)\\auth\\login\\page.tsx":"3","D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\(full-page)\\landing\\page.tsx":"4","D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\(full-page)\\layout.tsx":"5","D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\(full-page)\\pages\\notfound\\page.tsx":"6","D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\(main)\\blocks\\page.tsx":"7","D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\(main)\\detail-product\\management-category\\page.tsx":"8","D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\(main)\\documentation\\page.tsx":"9","D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\(main)\\layout.tsx":"10","D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\(main)\\live\\page.tsx":"11","D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\(main)\\management\\accounts\\page.tsx":"12","D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\(main)\\management\\fakeData\\DataAccount.ts":"13","D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\(main)\\management\\fakeData\\DataProducts.ts":"14","D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\(main)\\management\\loading.tsx":"15","D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\(main)\\management\\orders\\page.tsx":"16","D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\(main)\\management\\products\\page.tsx":"17","D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\(main)\\page.tsx":"18","D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\(main)\\pages\\crud\\page.tsx":"19","D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\(main)\\pages\\empty\\page.tsx":"20","D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\(main)\\pages\\timeline\\page.tsx":"21","D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\(main)\\uikit\\button\\page.tsx":"22","D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\(main)\\uikit\\charts\\page.tsx":"23","D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\(main)\\uikit\\file\\page.tsx":"24","D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\(main)\\uikit\\floatlabel\\page.tsx":"25","D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\(main)\\uikit\\formlayout\\page.tsx":"26","D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\(main)\\uikit\\input\\page.tsx":"27","D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\(main)\\uikit\\invalidstate\\page.tsx":"28","D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\(main)\\uikit\\list\\page.tsx":"29","D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\(main)\\uikit\\media\\page.tsx":"30","D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\(main)\\uikit\\menu\\confirmation\\page.tsx":"31","D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\(main)\\uikit\\menu\\page.tsx":"32","D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\(main)\\uikit\\menu\\payment\\page.tsx":"33","D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\(main)\\uikit\\menu\\seat\\page.tsx":"34","D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\(main)\\uikit\\message\\page.tsx":"35","D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\(main)\\uikit\\misc\\page.tsx":"36","D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\(main)\\uikit\\overlay\\page.tsx":"37","D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\(main)\\uikit\\panel\\page.tsx":"38","D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\(main)\\uikit\\table\\page.tsx":"39","D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\(main)\\uikit\\tree\\page.tsx":"40","D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\(main)\\utilities\\icons\\page.tsx":"41","D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\layout.tsx":"42"},{"size":1927,"mtime":1739507145139,"results":"43","hashOfConfig":"44"},{"size":1888,"mtime":1739507145139,"results":"45","hashOfConfig":"44"},{"size":3596,"mtime":1739543401729,"results":"46","hashOfConfig":"44"},{"size":38114,"mtime":1739507145140,"results":"47","hashOfConfig":"44"},{"size":572,"mtime":1739507145140,"results":"48","hashOfConfig":"44"},{"size":3657,"mtime":1739507145141,"results":"49","hashOfConfig":"44"},{"size":53501,"mtime":1739543188993,"results":"50","hashOfConfig":"44"},{"size":2488,"mtime":1739545131256,"results":"51","hashOfConfig":"44"},{"size":11639,"mtime":1739507145141,"results":"52","hashOfConfig":"44"},{"size":961,"mtime":1739507145142,"results":"53","hashOfConfig":"44"},{"size":4833,"mtime":1739545108802,"results":"54","hashOfConfig":"44"},{"size":10276,"mtime":1739543857137,"results":"55","hashOfConfig":"44"},{"size":2872,"mtime":1739507145142,"results":"56","hashOfConfig":"44"},{"size":4869,"mtime":1739543907140,"results":"57","hashOfConfig":"44"},{"size":121,"mtime":1739507145142,"results":"58","hashOfConfig":"44"},{"size":6288,"mtime":1739544401149,"results":"59","hashOfConfig":"44"},{"size":11429,"mtime":1739544456167,"results":"60","hashOfConfig":"44"},{"size":18157,"mtime":1739544400151,"results":"61","hashOfConfig":"44"},{"size":18480,"mtime":1739544400151,"results":"62","hashOfConfig":"44"},{"size":418,"mtime":1739507145144,"results":"63","hashOfConfig":"44"},{"size":4651,"mtime":1739507145144,"results":"64","hashOfConfig":"44"},{"size":11902,"mtime":1739507145144,"results":"65","hashOfConfig":"44"},{"size":11042,"mtime":1739507145145,"results":"66","hashOfConfig":"44"},{"size":1058,"mtime":1739507145145,"results":"67","hashOfConfig":"44"},{"size":7591,"mtime":1739543260754,"results":"68","hashOfConfig":"44"},{"size":6392,"mtime":1739507145145,"results":"69","hashOfConfig":"44"},{"size":17779,"mtime":1739544401151,"results":"70","hashOfConfig":"44"},{"size":5911,"mtime":1739543285674,"results":"71","hashOfConfig":"44"},{"size":9084,"mtime":1739544562578,"results":"72","hashOfConfig":"44"},{"size":4261,"mtime":1739544401151,"results":"73","hashOfConfig":"44"},{"size":446,"mtime":1739507145146,"results":"74","hashOfConfig":"44"},{"size":18526,"mtime":1739507145146,"results":"75","hashOfConfig":"44"},{"size":434,"mtime":1739507145147,"results":"76","hashOfConfig":"44"},{"size":423,"mtime":1739507145147,"results":"77","hashOfConfig":"44"},{"size":5198,"mtime":1739507145147,"results":"78","hashOfConfig":"44"},{"size":11974,"mtime":1739507145147,"results":"79","hashOfConfig":"44"},{"size":11350,"mtime":1739544400151,"results":"80","hashOfConfig":"44"},{"size":14387,"mtime":1739507145147,"results":"81","hashOfConfig":"44"},{"size":22574,"mtime":1739543325894,"results":"82","hashOfConfig":"44"},{"size":1965,"mtime":1739543339666,"results":"83","hashOfConfig":"44"},{"size":5058,"mtime":1739543350139,"results":"84","hashOfConfig":"44"},{"size":1862,"mtime":1739514030950,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"uxhvmg",{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","suppressedMessages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","suppressedMessages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","suppressedMessages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","suppressedMessages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","suppressedMessages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","suppressedMessages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","suppressedMessages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","suppressedMessages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","suppressedMessages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","suppressedMessages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","suppressedMessages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","suppressedMessages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\(full-page)\\auth\\access\\page.tsx",[],[],"D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\(full-page)\\auth\\error\\page.tsx",[],[],"D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\(full-page)\\auth\\login\\page.tsx",[],[],"D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\(full-page)\\landing\\page.tsx",[],[],"D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\(full-page)\\layout.tsx",[],[],"D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\(full-page)\\pages\\notfound\\page.tsx",[],[],"D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\(main)\\blocks\\page.tsx",[],[],"D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\(main)\\detail-product\\management-category\\page.tsx",[],["216","217","218","219","220"],"D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\(main)\\documentation\\page.tsx",[],[],"D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\(main)\\layout.tsx",[],[],"D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\(main)\\live\\page.tsx",["221","222","223"],["224","225","226","227","228","229","230","231"],"// @ts-nocheck\r\n/* eslint-disable react-hooks/rules-of-hooks */\r\n'use client';\r\n\r\nimport { Avatar } from 'primereact/avatar';\r\nimport { Button } from 'primereact/button';\r\nimport React, { useEffect, useLayoutEffect, useRef, useState } from 'react';\r\nimport io from 'socket.io-client';\r\nimport { data } from '../management/fakeData/DataAccount';\r\nimport Peer from 'peerjs';\r\nimport { BASE_URL } from '../../../common/service/type';\r\n\r\n//@ts-ignore\r\nconst socket = io.connect(BASE_URL);\r\n\r\nconst page = () => {\r\n    const [receivedMessages, setReceivedMessages] = useState<any>([]);\r\n    const videoRef = useRef<any>(null);\r\n    const peerRef = useRef<any>(null);\r\n    const [onMic, setOnMic] = useState(true);\r\n    const [onCam, setOnCam] = useState(true);\r\n    const [online, setOnline] = useState(true);\r\n    useEffect(() => {\r\n        const constraints = { video: true, audio: true };\r\n        const peer = new Peer();\r\n        navigator.mediaDevices\r\n            .getUserMedia(constraints)\r\n            .then((stream) => {\r\n                videoRef.current.srcObject = stream;\r\n\r\n                peer.on('open', (id) => {\r\n                    console.log('Peer ID:', id);\r\n                    // const call = peer.call('c7bd2900-cd06-4e10-b60d-48f7f161a22d123', stream);\r\n                    // console.log('call: ', call);\r\n\r\n                    socket.emit('stream', id);\r\n                });\r\n\r\n                peer.on('call', (call) => {\r\n                    call.answer(stream);\r\n                });\r\n\r\n                peerRef.current = peer;\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error accessing webcam:', error);\r\n            });\r\n\r\n        return () => {\r\n            if (videoRef.current && videoRef.current.srcObject) {\r\n                videoRef.current.srcObject.getTracks().forEach((track: any) => track.stop());\r\n            }\r\n\r\n            if (peerRef) {\r\n                peerRef.current.disconnect();\r\n            }\r\n            socket.disconnect(true);\r\n        };\r\n    }, [socket]);\r\n\r\n    useEffect(() => {\r\n        socket.emit('adminLive');\r\n        socket.on('adminComment', (data: any) => {\r\n            setReceivedMessages(data);\r\n        });\r\n        socket.on('user-admin-id', (userId: any) => {\r\n            const call = peerRef.current.call(userId, videoRef.current.srcObject);\r\n        });\r\n    }, [socket]);\r\n\r\n    return (\r\n        <div className=\"card h-full\">\r\n            <div className=\"grid\">\r\n                <div className=\"col-8\">\r\n                    <div>\r\n                        <div className=\"border-round\">{online ? <video className=\"border-round w-full\" ref={videoRef} autoPlay={onCam} playsInline muted={onMic} /> : ''}</div>\r\n                        <div className=\"flex justify-content-center mt-4\">\r\n                            <Button icon={`pi pi-volume-${onMic ? 'up' : 'off'}`} severity={`${!onMic ? 'danger' : 'help'}`} className=\"mb-2\" onClick={() => setOnMic(!onMic)} rounded />\r\n                            <Button icon={`pi pi-video`} severity={`${!onCam ? 'danger' : 'help'}`} onClick={() => setOnCam(!onCam)} rounded className=\"ml-2\" />\r\n                            <Button icon={`pi pi-stop`} severity={`${online ? 'danger' : 'help'}`} rounded className=\"ml-2\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-4\">\r\n                    <h5 className=\"border border-bottom-1 border-black-alpha-70\">Tin nhắn hàng đầu:</h5>\r\n                    <div className=\"border-1 border-round overflow-y-auto\" style={{ height: '50vh' }}>\r\n                        <div className=\"p-2\">\r\n                            {receivedMessages.map((msg: { author: string; content: string }, index: number) => {\r\n                                return (\r\n                                    <div className=\"flex align-align-items-start mb-2\" key={index}>\r\n                                        <div className=\"inline-block mr-2 mt-1\">\r\n                                            <Avatar image=\"https://images.unsplash.com/photo-1509043759401-136742328bb3?ixlib=rb-4.0.3&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max\" size=\"normal\" className=\"inline-block\" shape=\"circle\" />\r\n                                        </div>\r\n                                        <p className=\"inline-block\">\r\n                                            <span className=\"font-bold\">{msg.author}: </span>\r\n                                            {msg.content}\r\n                                        </p>\r\n                                    </div>\r\n                                );\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default page;\r\n","D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\(main)\\management\\accounts\\page.tsx",["232"],[],"'use client';\r\nimport React, { useState, useEffect, useRef, useContext } from 'react';\r\nimport { classNames } from 'primereact/utils';\r\nimport { FilterMatchMode } from 'primereact/api';\r\nimport { DataTable, DataTableFilterMeta } from 'primereact/datatable';\r\nimport { Column, ColumnFilterElementTemplateOptions } from 'primereact/column';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Dropdown, DropdownChangeEvent } from 'primereact/dropdown';\r\nimport { MultiSelect, MultiSelectChangeEvent } from 'primereact/multiselect';\r\nimport { Tag } from 'primereact/tag';\r\nimport { TriStateCheckbox, TriStateCheckboxChangeEvent } from 'primereact/tristatecheckbox';\r\nimport { data } from '../fakeData/DataAccount';\r\nimport { Button } from 'primereact/button';\r\nimport ModalEditAccount from '../../../../layout/Dialog/ModalEditAccount';\r\nimport { Account, ModalEditAccountProps } from '../../../../types/types';\r\nimport ModalAddAccount from '../../../../layout/Dialog/ModalAddAccount';\r\n//@ts-ignore\r\nimport { AccountCommon, AccountService } from '../../../../common/service/AccountService';\r\n//@ts-ignore\r\nimport { exportDataAccount } from '../../../../common/excel.';\r\nimport { convertDateTimeFormat } from '../../../../common/utils/util';\r\nimport { Paginator } from 'primereact/paginator';\r\nimport ModalDetailAccount from '../../../../layout/Dialog/ModalDetailAccount';\r\nimport { Toast } from 'primereact/toast';\r\nimport Loading from '../loading';\r\nimport LoadingCustom from '../../../../common/components/Loading';\r\nimport { LayoutContext } from '../../../../layout/context/layoutcontext';\r\nimport { ExcelService } from '../../../../common/service/ExcelService';\r\nimport axios from 'axios';\r\nimport download from 'downloadjs';\r\nimport { ConfirmPopup, confirmPopup } from 'primereact/confirmpopup';\r\nimport { BASE_URL } from '../../../../common/service/type';\r\n\r\nexport default function BasicFilterDemo() {\r\n    const [isEdit, setIsEdit] = useState<boolean>(false);\r\n    const toast = useRef<Toast>(null);\r\n    const { loading, setLoading } = useContext(LayoutContext);\r\n\r\n    const [data, setData] = useState<Account[]>([]);\r\n    const [visible, setVisible] = useState(false);\r\n    const [render, setRender] = useState(true);\r\n    const [first, setFirst] = useState(0);\r\n    const [totalPages, setTotalPages] = useState(100);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [rows, setRows] = useState(5);\r\n    const [accountData, setAccountData] = useState<Partial<Account>>({});\r\n    const [accountProp, setAccountProp] = useState<any>(null);\r\n    const [visibleDetailAccount, setVisibleDetailAccount] = useState(false);\r\n    const [globalFilterValue, setGlobalFilterValue] = useState<string>('');\r\n\r\n    useEffect(() => {\r\n        setLoading(false);\r\n        const fetchData = async () => {\r\n            const accounts = await AccountService.getListAccount({ page: currentPage + '', limit: '5', keyword: globalFilterValue });\r\n            setData(accounts.accounts);\r\n            setRows(5);\r\n            setTotalPages(accounts.pagination.totalDocuments);\r\n            setLoading(false);\r\n        };\r\n        fetchData();\r\n    }, [first, rows, globalFilterValue, render]);\r\n\r\n    const onGlobalFilterChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const value = e.target.value;\r\n        setGlobalFilterValue(value);\r\n    };\r\n\r\n    const handleDeleteAccount = async (rowData: Account) => {\r\n        setLoading(true);\r\n        setAccountData(rowData);\r\n        const account = await AccountService.deleteAccountById(rowData._id);\r\n        if (account.status === 'success') {\r\n            setTimeout(() => {\r\n                setLoading(false);\r\n                setRender(!render);\r\n                toast.current?.show({ severity: 'success', summary: 'Thành công', detail: 'Xóa thành công', life: 3000 });\r\n            }, 2000);\r\n        } else {\r\n            toast.current?.show({ severity: 'error', summary: 'Đã xảy ra lỗi', detail: 'Xóa thất bại', life: 3000 });\r\n        }\r\n    };\r\n\r\n    const handleExportFile = async () => {\r\n        fetch(`${BASE_URL}/export/accounts`)\r\n            .then((res) => res.blob())\r\n            .then((blob) => download(blob, 'danh_sach_tai_khoan_' + new Date().toLocaleDateString())) // this line automatically starts a download operation\r\n            .catch((err) => console.log(err));\r\n    };\r\n\r\n    const renderHeader = () => {\r\n        return (\r\n            <div className=\"flex justify-content-between pr-5 mr-5\">\r\n                <LoadingCustom visible={loading} />\r\n                <span className=\"p-input-icon-left\">\r\n                    <i className=\"pi pi-search\" />\r\n                    <InputText value={globalFilterValue} onChange={onGlobalFilterChange} placeholder=\"Keyword Search\" />\r\n                </span>\r\n                <div>\r\n                    <Button\r\n                        type=\"button\"\r\n                        icon=\"pi pi-user-plus\"\r\n                        className=\"mr-5\"\r\n                        severity=\"secondary\"\r\n                        rounded\r\n                        onClick={() => {\r\n                            setIsEdit(false);\r\n                            setAccountData({ username: '', password: '', _id: '', avatar: '', email: '', phone: '' });\r\n                            setVisible(true);\r\n                        }}\r\n                    />\r\n                    <Button type=\"button\" icon=\"pi pi-file-excel\" severity=\"success\" rounded onClick={handleExportFile} />\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const idBodyTemplate = (rowData: Account) => {\r\n        return (\r\n            <div className=\"flex align-items-center gap-2\">\r\n                <p\r\n                    onClick={() => {\r\n                        setVisibleDetailAccount(!visibleDetailAccount);\r\n                        setAccountProp(rowData);\r\n                    }}\r\n                    className=\"hover:text-purple-600 cursor-pointer\"\r\n                >\r\n                    {rowData._id}\r\n                </p>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const emailBodyTemplate = (rowData: Account) => {\r\n        return (\r\n            <div className=\"flex align-items-center gap-2\">\r\n                <p>{rowData.email}</p>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const phoneBodyTemplate = (rowData: Account) => {\r\n        return (\r\n            <div className=\"flex align-items-center gap-2\">\r\n                <span>{rowData.phone}</span>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const createdAtBodyTemplate = (rowData: Account) => {\r\n        return (\r\n            <div className=\"flex align-items-center gap-2\">\r\n                <span>{convertDateTimeFormat(rowData.createdAt)}</span>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const updatedAtBodyTemplate = (rowData: Account) => {\r\n        return (\r\n            <div className=\"flex align-items-center gap-2\">\r\n                <span>{convertDateTimeFormat(rowData.updatedAt)}</span>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const actionBodyTemplate = (rowData: Account) => {\r\n        const accept = () => {\r\n            handleDeleteAccount(rowData);\r\n        };\r\n\r\n        const reject = () => {\r\n            toast.current.show({ severity: 'warn', summary: 'Hủy thành công', detail: 'Bạn đã hủy bỏ ', life: 3000 });\r\n        };\r\n        const confirm2 = (event) => {\r\n            confirmPopup({\r\n                target: event.currentTarget,\r\n                message: 'Bạn có chắc là sẽ xóa tài khoản này?',\r\n                icon: 'pi pi-info-circle',\r\n                //@ts-ignore\r\n                defaultFocus: 'reject',\r\n                acceptClassName: 'p-button-danger',\r\n                accept,\r\n                reject\r\n            });\r\n        };\r\n        return (\r\n            <div className=\"\">\r\n                <Button\r\n                    severity=\"warning\"\r\n                    icon=\"pi pi-user-edit\"\r\n                    rounded\r\n                    className=\"mr-2\"\r\n                    onClick={() => {\r\n                        setVisible(true);\r\n                        setIsEdit(true);\r\n                        setAccountData(rowData);\r\n                    }}\r\n                />\r\n                <ConfirmPopup />\r\n                <Button onClick={confirm2} icon=\"pi pi-trash\" label=\"\" rounded className=\"p-button-danger\"></Button>\r\n            </div>\r\n        );\r\n    };\r\n    const onPageChange = (event) => {\r\n        setFirst(event.first);\r\n        setRows(event.rows);\r\n        setCurrentPage(event.page + 1);\r\n    };\r\n    const header = renderHeader();\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <DataTable rowsPerPageOptions={[5, 10, 25, 50]} removableSort value={data} showGridlines rows={5} dataKey=\"_id\" loading={loading} header={header} emptyMessage=\"No user found.\">\r\n                <Column field=\"_id\" sortable filterField=\"_id\" body={idBodyTemplate} header=\"ID\" style={{ minWidth: '12rem' }} />\r\n                <Column field=\"username\" sortable header=\"Tên tài khoản\" style={{ minWidth: '12rem' }} />\r\n                <Column header=\"Email\" field=\"email\" sortable filterField=\"email\" style={{ minWidth: '12rem' }} body={emailBodyTemplate} />\r\n                <Column header=\"Số điện thoại\" field=\"phone\" sortable filterField=\"phone\" body={phoneBodyTemplate} />\r\n                <Column header=\"Ngày đăng kí\" field=\"createdAt\" sortable filterField=\"createdAt\" body={createdAtBodyTemplate} />\r\n                <Column header=\"Chỉnh sửa\" body={actionBodyTemplate} />\r\n            </DataTable>\r\n            <Toast ref={toast} />\r\n\r\n            <Paginator first={first} rows={rows} totalRecords={totalPages} onPageChange={onPageChange} />\r\n            <ModalDetailAccount account={accountProp} visible={visibleDetailAccount} setVisible={setVisibleDetailAccount} />\r\n            {isEdit ? (\r\n                <ModalEditAccount isEdit={isEdit} visible={visible} setVisible={setVisible} accountData={accountData} setAccountData={setAccountData} render={render} setRender={setRender} />\r\n            ) : (\r\n                <ModalAddAccount visible={visible} setVisible={setVisible} render={render} setRender={setRender} />\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n","D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\(main)\\management\\fakeData\\DataAccount.ts",[],[],"D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\(main)\\management\\fakeData\\DataProducts.ts",[],[],"D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\(main)\\management\\loading.tsx",[],[],"D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\(main)\\management\\orders\\page.tsx",["233"],[],"'use client';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { OrderService } from '../../../../common/service/OrderService';\r\nimport { Column } from 'primereact/column';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Tag } from 'primereact/tag';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Paginator } from 'primereact/paginator';\r\nimport { Button } from 'primereact/button';\r\nimport ModalDetailOrder from '../../../../layout/Dialog/ModalDetailOrder';\r\nimport { LayoutContext } from '../../../../layout/context/layoutcontext';\r\nimport Swal from 'sweetalert2';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport LoadingCustom from '../../../../common/components/Loading';\r\nimport download from 'downloadjs';\r\nimport { BASE_URL } from '../../../../common/service/type';\r\n\r\nconst Orders = () => {\r\n    const [render, setRender] = useState(false);\r\n    const [orders, setOrders] = useState([]);\r\n    const [totalPages, setTotalPages] = useState(100);\r\n    const [search, setSearch] = useState('');\r\n    const [first, setFirst] = useState(0);\r\n    const [rows, setRows] = useState(5);\r\n    const [orderId, setOrderId] = useState('');\r\n    const [visible, setVisible] = useState(false);\r\n    const [isLoading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        loadOrders();\r\n    }, [first, rows, search, render]);\r\n\r\n    const loadOrders = () => {\r\n        //@ts-ignore\r\n        OrderService.getListOrder({ keyword: search, page: first / rows + 1 }).then((res) => {\r\n            setOrders(res.orders);\r\n            setTotalPages(res.pagination.totalDocuments);\r\n        });\r\n    };\r\n\r\n    const handleChangeStatus = async (orderId: string, statusOrder: '1' | '2' | '3' | '4') => {\r\n        setLoading(true);\r\n        const res = await OrderService.putOrder({ orderId: orderId, statusOrder: statusOrder });\r\n        if (res) {\r\n            setRender(!render);\r\n            setLoading(false);\r\n            Swal.fire({ icon: 'success', title: 'Thay đổi thành công' });\r\n        } else {\r\n            Swal.fire({ icon: 'error', title: 'Thay đổi thất bại' });\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const statusBodyTemplate = (order) => {\r\n        const arr = [\r\n            { name: 'In progress', code: '2', bg: 'bg-yellow-200' },\r\n            { name: 'Pending', code: '1', bg: 'bg-cyan-200\t' },\r\n            { name: 'Completed', code: '3', bg: 'bg-primary-200\t' },\r\n            { name: 'Cancel', code: '4', bg: 'bg-red-200' }\r\n        ];\r\n        const filt = arr.filter((item) => item.name === order.status);\r\n        return <Dropdown value={filt[0]} options={arr} optionLabel=\"name\" onChange={(e) => handleChangeStatus(order._id, e.target.value.code)} className={`${filt[0].bg} w-full`} />;\r\n    };\r\n\r\n    const totalAmountTemplate = (order) => {\r\n        return <p className=\"font-bold\">{order.totalAmount}.000đ</p>;\r\n    };\r\n\r\n    const onPageChange = (e) => {\r\n        setFirst(e.first);\r\n        setRows(e.rows);\r\n    };\r\n\r\n    const handleDetailOrder = (orderId) => {\r\n        setOrderId(orderId);\r\n        setVisible(true);\r\n    };\r\n\r\n    const handleDeleteOrder = async (orderId) => {\r\n        const res = await OrderService.putOrder({ orderId: orderId, statusOrder: '4' });\r\n        if (res) {\r\n            Swal.fire({ icon: 'success', title: 'Xóa thành công' });\r\n            setRender(!render);\r\n        } else {\r\n            Swal.fire({ icon: 'error', title: 'Xóa thất bại' });\r\n        }\r\n    };\r\n    const idTemplate = (order) => {\r\n        return (\r\n            <p onClick={() => handleDetailOrder(order._id)} className=\"hover:text-blue-600 cursor-pointer\">\r\n                {order.orderNumber}\r\n            </p>\r\n        );\r\n    };\r\n\r\n    const headerTemplate = () => {\r\n        return (\r\n            <div className=\"flex justify-content-between\">\r\n                <InputText type=\"search\" placeholder=\"Tìm kiếm\" value={search} onChange={(e) => setSearch(e.target.value)} />\r\n                <Button\r\n                    type=\"button\"\r\n                    icon=\"pi pi-file-excel\"\r\n                    severity=\"success\"\r\n                    rounded\r\n                    className=\"mr-5\"\r\n                    onClick={() => {\r\n                        fetch(BASE_URL + '/export/orders')\r\n                            .then((res) => res.blob())\r\n                            .then((blob) => download(blob, 'danh_sach_don_hang_' + new Date().toLocaleDateString())) // this line automatically starts a download operation\r\n                            .catch((err) => console.log(err));\r\n                    }}\r\n                />\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const actionBodyTemplate = (order) => {\r\n        return <Button severity=\"danger\" onClick={() => handleDeleteOrder(order._id)} icon=\"pi pi-trash\" />;\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"card\">\r\n                <LoadingCustom visible={isLoading} />\r\n                <DataTable value={orders} stripedRows tableStyle={{ minWidth: '50rem' }} header={headerTemplate}>\r\n                    <Column field=\"index\" header=\"STT\" align=\"center\" body={(rowData, rowIndex) => rowIndex.rowIndex + 1} style={{ maxWidth: '3rem' }} />\r\n                    <Column field=\"orderNumber\" header=\"Mã đơn hàng\" align=\"center\" body={idTemplate} />\r\n                    <Column field=\"customer.username\" header=\"Tên khách hàng\" align=\"center\" />\r\n                    <Column field=\"customer.phone\" header=\"Số điện thoại\" align=\"center\" />\r\n                    <Column field=\"items.length\" header=\"Số lượng\" align=\"center\" />\r\n                    <Column field=\"totalAmount\" header=\"Tổng đơn hàng\" align=\"center\" body={totalAmountTemplate} />\r\n                    <Column field=\"status\" header=\"Status\" body={statusBodyTemplate} align=\"center\" />\r\n                    <Column field=\"action\" header=\"\" body={actionBodyTemplate} align=\"center\" />\r\n                </DataTable>\r\n                <ModalDetailOrder orderId={orderId} visible={visible} setVisible={setVisible} />\r\n                <Paginator first={first} rows={rows} totalRecords={totalPages} onPageChange={onPageChange} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Orders;\r\n","D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\(main)\\management\\products\\page.tsx",[],[],"D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\(main)\\page.tsx",["234"],[],"'use client';\r\nimport React, { useState, useEffect, useContext } from 'react';\r\nimport { Chart } from 'primereact/chart';\r\nimport { Card } from 'primereact/card';\r\nimport { Calendar } from 'primereact/calendar';\r\nimport { convertToVND, getDaysInMonth, numberWithCommas } from '../../common/utils/util';\r\nimport { Button } from 'primereact/button';\r\nimport Link from 'next/link';\r\nimport { Column } from 'primereact/column';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Menu } from 'primereact/menu';\r\nimport { DashboardService } from '../../common/service/DashboardService';\r\nimport { AuthContext, AuthProvider } from '../../layout/context/authContext';\r\nimport Swal from 'sweetalert2';\r\n\r\ninterface ResponseInfor {\r\n    orders: {\r\n        total: number | string;\r\n        new: number | string;\r\n    };\r\n    revenue: {\r\n        data: number | string;\r\n        increase: boolean;\r\n        percent: number | string;\r\n    };\r\n    users: {\r\n        total: number | string;\r\n        new: number | string;\r\n    };\r\n    comment: {\r\n        present: number | string;\r\n        old: number | string;\r\n    };\r\n}\r\ninterface Product {\r\n    [index: number]: string;\r\n    productName: string;\r\n    category: string;\r\n}\r\n\r\ninterface Notification {\r\n    username: string;\r\n    totalBill: number;\r\n}\r\n\r\ninterface ResponseInfor2 {\r\n    bestSeller: Product[];\r\n    productToday: { [category: string]: number };\r\n    chart: {\r\n        dataOldMonth: number[];\r\n        dataPresent: number[];\r\n    };\r\n    notification: Notification[];\r\n}\r\n\r\nexport default function StackedBarDemo() {\r\n    //@ts-ignore\r\n    const { token } = useContext(AuthContext);\r\n\r\n    const [dataFetch, setDataFetch] = useState<ResponseInfor | null>(null);\r\n    const [dataFetch2, setDataFetch2] = useState<ResponseInfor2 | null>(null);\r\n    const [chartData, setChartData] = useState({});\r\n    const [chartOptions, setChartOptions] = useState({});\r\n\r\n    const [chartDonutData, setChartDonutData] = useState({});\r\n    const [chartDonutOptions, setChartDonutOptions] = useState({});\r\n\r\n    const [chartLineData, setChartLineData] = useState({});\r\n    const [chartLineOptions, setChartLineOptions] = useState({});\r\n\r\n    //Chart statistical by year\r\n    useEffect(() => {\r\n        const documentStyle = getComputedStyle(document.documentElement);\r\n        const textColor = documentStyle.getPropertyValue('--text-color');\r\n        const textColorSecondary = documentStyle.getPropertyValue('--text-color-secondary');\r\n        const surfaceBorder = documentStyle.getPropertyValue('--surface-border');\r\n        const listTea = [];\r\n        const listCake = [];\r\n        const listCoffee = [];\r\n        const monthList = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12'];\r\n        const monthPre = new Date().getMonth();\r\n        for (let i = 0; i < 12; i++) {\r\n            if (i <= monthPre) {\r\n                monthList[i] = monthList[i] + '/' + new Date().getFullYear();\r\n            } else {\r\n                monthList[i] = monthList[i] + '/' + (new Date().getFullYear() - 1);\r\n            }\r\n            listTea.push(Math.floor(Math.random() * 3000));\r\n            listCake.push(Math.floor(Math.random() * 3000));\r\n            listCoffee.push(Math.floor(Math.random() * 3000));\r\n        }\r\n        const data = {\r\n            labels: monthList,\r\n            datasets: [\r\n                {\r\n                    type: 'bar',\r\n                    label: 'Trà',\r\n                    backgroundColor: documentStyle.getPropertyValue('--blue-500'),\r\n                    data: listTea\r\n                },\r\n                {\r\n                    type: 'bar',\r\n                    label: 'Bánh ngọt',\r\n                    backgroundColor: documentStyle.getPropertyValue('--green-500'),\r\n                    data: listCake\r\n                },\r\n                {\r\n                    type: 'bar',\r\n                    label: 'Cà phê',\r\n                    backgroundColor: documentStyle.getPropertyValue('--yellow-500'),\r\n                    data: listCoffee\r\n                }\r\n            ]\r\n        };\r\n        const options = {\r\n            maintainAspectRatio: false,\r\n            aspectRatio: 0.8,\r\n            plugins: {\r\n                tooltips: {\r\n                    mode: 'index',\r\n                    intersect: false\r\n                },\r\n                legend: {\r\n                    labels: {\r\n                        color: textColor\r\n                    }\r\n                }\r\n            },\r\n            scales: {\r\n                x: {\r\n                    stacked: true,\r\n                    ticks: {\r\n                        color: textColorSecondary\r\n                    },\r\n                    grid: {\r\n                        color: surfaceBorder\r\n                    }\r\n                },\r\n                y: {\r\n                    stacked: true,\r\n                    ticks: {\r\n                        color: textColorSecondary\r\n                    },\r\n                    grid: {\r\n                        color: surfaceBorder\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        setChartData(data);\r\n        setChartOptions(options);\r\n    }, []);\r\n\r\n    //Donut chart\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const data1 = await DashboardService.getDashboardInfor(token.accessToken);\r\n            const data2 = await DashboardService.getDashboardChart(token.accessToken);\r\n            setDataFetch(data1.data);\r\n            setDataFetch2(data2.data);\r\n\r\n            const documentStyle = getComputedStyle(document.documentElement);\r\n            const listProductToday = Object.keys(data2.data?.productToday);\r\n            const listData = Object.values(data2.data?.productToday);\r\n\r\n            const data = {\r\n                labels: listProductToday,\r\n                datasets: [\r\n                    {\r\n                        data: listData\r\n                    }\r\n                ]\r\n            };\r\n            const options = {\r\n                cutout: '40%'\r\n            };\r\n            setChartDonutData(data);\r\n            setChartDonutOptions(options);\r\n\r\n            //Chart 2:\r\n            const chart2 = (present, old) => {\r\n                const documentStyle = getComputedStyle(document.documentElement);\r\n                const textColor = documentStyle.getPropertyValue('--text-color');\r\n                const textColorSecondary = documentStyle.getPropertyValue('--text-color-secondary');\r\n                const surfaceBorder = documentStyle.getPropertyValue('--surface-border');\r\n                const dayNumber = getDaysInMonth(new Date().getFullYear(), new Date().getMonth() + 1);\r\n                const listDay = [];\r\n                for (let i = 1; i <= dayNumber; i++) {\r\n                    listDay.push(i);\r\n                }\r\n\r\n                const data = {\r\n                    labels: listDay,\r\n                    datasets: [\r\n                        {\r\n                            label: 'Tháng trước',\r\n                            data: old,\r\n                            fill: false,\r\n                            borderColor: documentStyle.getPropertyValue('--yellow-500'),\r\n                            tension: 0.4,\r\n                            backgroundColor: documentStyle.getPropertyValue('--yellow-500')\r\n                        },\r\n                        {\r\n                            label: 'Hiện tại',\r\n                            data: present,\r\n                            fill: false,\r\n                            borderColor: documentStyle.getPropertyValue('--blue-500'),\r\n                            tension: 0.4,\r\n                            backgroundColor: documentStyle.getPropertyValue('--blue-500')\r\n                        }\r\n                    ]\r\n                };\r\n                const options = {\r\n                    maintainAspectRatio: false,\r\n                    aspectRatio: 0.6,\r\n                    plugins: {\r\n                        legend: {\r\n                            labels: {\r\n                                color: textColor\r\n                            }\r\n                        }\r\n                    },\r\n                    scales: {\r\n                        x: {\r\n                            ticks: {\r\n                                color: textColorSecondary\r\n                            },\r\n                            grid: {\r\n                                color: surfaceBorder\r\n                            }\r\n                        },\r\n                        y: {\r\n                            ticks: {\r\n                                color: textColorSecondary\r\n                            },\r\n                            grid: {\r\n                                color: surfaceBorder\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n\r\n                setChartLineData(data);\r\n                setChartLineOptions(options);\r\n            };\r\n            chart2(data2.data.chart.dataPresent, data2.data.chart.dataOldMonth);\r\n        };\r\n        fetchData();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"grid\">\r\n                <div className=\"col-12 lg:col-6 xl:col-3\">\r\n                    <div className=\"card mb-0 h-full\">\r\n                        <div className=\"flex justify-content-between mb-3\">\r\n                            <div>\r\n                                <span className=\"block text-500 font-medium mb-3\">Đơn hàng</span>\r\n                                <div className=\"text-900 font-medium text-xl\">{dataFetch?.orders.total}</div>\r\n                            </div>\r\n                            <div className=\"flex align-items-center justify-content-center bg-blue-100 border-round\" style={{ width: '2.5rem', height: '2.5rem' }}>\r\n                                <i className=\"pi pi-shopping-cart text-blue-500 text-xl\" />\r\n                            </div>\r\n                        </div>\r\n                        <span className=\"text-green-500 font-medium\">{dataFetch?.orders.new} đơn mới </span>\r\n                        <span className=\"text-500\">kể từ 30 ngày trước</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-12 lg:col-6 xl:col-3\">\r\n                    <div className=\"card mb-0 h-full\">\r\n                        <div className=\"flex justify-content-between mb-3\">\r\n                            <div>\r\n                                <span className=\"block text-500 font-medium mb-3\">Doanh thu</span>\r\n                                <div className=\"text-900 font-medium text-xl\">{convertToVND(dataFetch?.revenue.data)}</div>\r\n                            </div>\r\n                            <div className=\"flex align-items-center justify-content-center bg-orange-100 border-round\" style={{ width: '2.5rem', height: '2.5rem' }}>\r\n                                <i className=\"pi pi-map-marker text-orange-500 text-xl\" />\r\n                            </div>\r\n                        </div>\r\n                        <span className=\"text-green-500 font-medium\">\r\n                            {dataFetch?.revenue.increase ? 'Tăng' : 'Giảm'} {dataFetch?.revenue.percent}%{' '}\r\n                        </span>\r\n                        <span className=\"text-500\">kể từ tháng trước </span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-12 lg:col-6 xl:col-3\">\r\n                    <div className=\"card mb-0 h-full\">\r\n                        <div className=\"flex justify-content-between mb-3\">\r\n                            <div>\r\n                                <span className=\"block text-500 font-medium mb-3\">Người dùng</span>\r\n                                <div className=\"text-900 font-medium text-xl\">{dataFetch?.users.total}</div>\r\n                            </div>\r\n                            <div className=\"flex align-items-center justify-content-center bg-cyan-100 border-round\" style={{ width: '2.5rem', height: '2.5rem' }}>\r\n                                <i className=\"pi pi-inbox text-cyan-500 text-xl\" />\r\n                            </div>\r\n                        </div>\r\n                        <span className=\"text-green-500 font-medium\">{dataFetch?.users.new} </span>\r\n                        <span className=\"text-500\">người đăng kí mới trong 7 ngày qua</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-12 lg:col-6 xl:col-3\">\r\n                    <div className=\"card mb-0 h-full\">\r\n                        <div className=\"flex justify-content-between mb-3\">\r\n                            <div>\r\n                                <span className=\"block text-500 font-medium mb-3\">Bình luận</span>\r\n                                <div className=\"text-900 font-medium text-xl\">{dataFetch?.comment.present} Mới</div>\r\n                            </div>\r\n                            <div className=\"flex align-items-center justify-content-center bg-purple-100 border-round\" style={{ width: '2.5rem', height: '2.5rem' }}>\r\n                                <i className=\"pi pi-comment text-purple-500 text-xl\" />\r\n                            </div>\r\n                        </div>\r\n                        <span className=\"text-500\">{dataFetch?.comment.present > dataFetch?.comment.old ? 'Nhiều' : 'Ít'} hơn so với tháng trước:</span>\r\n                        <span className=\"text-green-500 font-medium\"> {dataFetch?.comment.old}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"grid\">\r\n                <div className=\"col-12 xl:col-4\">\r\n                    <div className=\"card mb-2\">\r\n                        <h5>Số lượng sản phẩm trong ngày</h5>\r\n                        <Chart type=\"doughnut\" data={chartDonutData} options={chartDonutOptions} height=\"45vh\" className=\"flex justify-content-center\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-12 xl:col-8\">\r\n                    <div className=\"card mb-2\">\r\n                        <h5>Bảng thống kê theo tháng</h5>\r\n                        <Chart type=\"bar\" data={chartLineData} options={chartLineOptions} height=\"45vh\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"grid\">\r\n                <div className=\"col-12 xl:col-6\">\r\n                    <div className=\"card max-h-30rem overflow-y-scroll\">\r\n                        <div className=\"flex align-items-center justify-content-between mb-4\">\r\n                            <h5>Thông báo</h5>\r\n                            <div>\r\n                                <Menu\r\n                                    popup\r\n                                    model={[\r\n                                        { label: 'Add New', icon: 'pi pi-fw pi-plus' },\r\n                                        { label: 'Remove', icon: 'pi pi-fw pi-minus' }\r\n                                    ]}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <span className=\"block text-600 font-medium mb-3\">Mới nhất</span>\r\n                        <ul className=\"p-0 mx-0 mt-0 mb-4 list-none\">\r\n                            {dataFetch2?.notification.map((u, i) => {\r\n                                return (\r\n                                    <li className=\"flex align-items-center py-2 border-bottom-1 surface-border\" key={i}>\r\n                                        <div className=\"w-3rem h-3rem flex align-items-center justify-content-center bg-blue-100 border-circle mr-3 flex-shrink-0\">\r\n                                            <i className=\"pi pi-dollar text-xl text-blue-500\" />\r\n                                        </div>\r\n                                        <span className=\"text-900 line-height-3\">\r\n                                            {u.username}{' '}\r\n                                            <span className=\"text-700\">\r\n                                                đã đặt một đơn hàng trị giá <span className=\"text-blue-500\">{u.totalBill}.000đ</span>\r\n                                            </span>\r\n                                        </span>\r\n                                    </li>\r\n                                );\r\n                            })}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-12 xl:col-6\">\r\n                    <div className=\"card max-h-30rem\">\r\n                        <div className=\"flex justify-content-between align-items-center mb-5\">\r\n                            <h5>Sản phẩm bán chạy</h5>\r\n                        </div>\r\n                        <ul className=\"list-none p-0 m-0\">\r\n                            {dataFetch2?.bestSeller.map((p, i) => {\r\n                                return (\r\n                                    <li className=\"flex flex-column md:flex-row md:align-items-center md:justify-content-between mb-4\" key={i}>\r\n                                        <div>\r\n                                            <span className=\"text-900 font-medium mr-2 mb-1 md:mb-0\">{p.productName}</span>\r\n                                            <div className=\"mt-1 text-600 capitalize\">{p.category}</div>\r\n                                        </div>\r\n                                        <div className=\"mt-2 md:mt-0 flex align-items-center\">\r\n                                            <span className=\"text-orange-500 ml-3 font-medium\">BEST SELLER!!!</span>\r\n                                        </div>\r\n                                    </li>\r\n                                );\r\n                            })}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"card\">\r\n                <h5>Bảng thống kê theo năm</h5>\r\n                <Chart type=\"bar\" data={chartData} options={chartOptions} height=\"30vh\" />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\(main)\\pages\\crud\\page.tsx",[],[],"D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\(main)\\pages\\empty\\page.tsx",[],[],"D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\(main)\\pages\\timeline\\page.tsx",[],[],"D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\(main)\\uikit\\button\\page.tsx",[],[],"D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\(main)\\uikit\\charts\\page.tsx",[],[],"D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\(main)\\uikit\\file\\page.tsx",[],[],"D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\(main)\\uikit\\floatlabel\\page.tsx",[],[],"D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\(main)\\uikit\\formlayout\\page.tsx",[],[],"D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\(main)\\uikit\\input\\page.tsx",[],[],"D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\(main)\\uikit\\invalidstate\\page.tsx",[],[],"D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\(main)\\uikit\\list\\page.tsx",[],[],"D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\(main)\\uikit\\media\\page.tsx",[],[],"D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\(main)\\uikit\\menu\\confirmation\\page.tsx",[],[],"D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\(main)\\uikit\\menu\\page.tsx",[],[],"D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\(main)\\uikit\\menu\\payment\\page.tsx",[],[],"D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\(main)\\uikit\\menu\\seat\\page.tsx",[],[],"D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\(main)\\uikit\\message\\page.tsx",[],[],"D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\(main)\\uikit\\misc\\page.tsx",[],[],"D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\(main)\\uikit\\overlay\\page.tsx",[],[],"D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\(main)\\uikit\\panel\\page.tsx",[],[],"D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\(main)\\uikit\\table\\page.tsx",[],[],"D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\(main)\\uikit\\tree\\page.tsx",[],[],"D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\(main)\\utilities\\icons\\page.tsx",[],[],"D:\\Work\\Coffee_web\\COFFEE_WEB_ADMIN\\app\\layout.tsx",[],[],{"ruleId":"235","severity":2,"message":"236","line":14,"column":29,"nodeType":"237","endLine":14,"endColumn":37,"suppressions":"238"},{"ruleId":"235","severity":2,"message":"236","line":15,"column":33,"nodeType":"237","endLine":15,"endColumn":41,"suppressions":"239"},{"ruleId":"235","severity":2,"message":"236","line":16,"column":35,"nodeType":"237","endLine":16,"endColumn":43,"suppressions":"240"},{"ruleId":"235","severity":2,"message":"236","line":17,"column":37,"nodeType":"237","endLine":17,"endColumn":45,"suppressions":"241"},{"ruleId":"235","severity":2,"message":"242","line":18,"column":5,"nodeType":"237","endLine":18,"endColumn":14,"suppressions":"243"},{"ruleId":"244","severity":1,"message":"245","line":51,"column":26,"nodeType":"237","endLine":51,"endColumn":33},{"ruleId":"244","severity":1,"message":"246","line":59,"column":8,"nodeType":"247","endLine":59,"endColumn":16,"suggestions":"248"},{"ruleId":"244","severity":1,"message":"246","line":69,"column":8,"nodeType":"247","endLine":69,"endColumn":16,"suggestions":"249"},{"ruleId":"235","severity":2,"message":"236","line":17,"column":53,"nodeType":"237","endLine":17,"endColumn":61,"suppressions":"250"},{"ruleId":"235","severity":2,"message":"251","line":18,"column":22,"nodeType":"237","endLine":18,"endColumn":28,"suppressions":"252"},{"ruleId":"235","severity":2,"message":"251","line":19,"column":21,"nodeType":"237","endLine":19,"endColumn":27,"suppressions":"253"},{"ruleId":"235","severity":2,"message":"236","line":20,"column":31,"nodeType":"237","endLine":20,"endColumn":39,"suppressions":"254"},{"ruleId":"235","severity":2,"message":"236","line":21,"column":31,"nodeType":"237","endLine":21,"endColumn":39,"suppressions":"255"},{"ruleId":"235","severity":2,"message":"236","line":22,"column":33,"nodeType":"237","endLine":22,"endColumn":41,"suppressions":"256"},{"ruleId":"235","severity":2,"message":"242","line":23,"column":5,"nodeType":"237","endLine":23,"endColumn":14,"suppressions":"257"},{"ruleId":"235","severity":2,"message":"242","line":61,"column":5,"nodeType":"237","endLine":61,"endColumn":14,"suppressions":"258"},{"ruleId":"244","severity":1,"message":"259","line":61,"column":8,"nodeType":"247","endLine":61,"endColumn":48,"suggestions":"260"},{"ruleId":"244","severity":1,"message":"261","line":31,"column":8,"nodeType":"247","endLine":31,"endColumn":37,"suggestions":"262"},{"ruleId":"244","severity":1,"message":"263","line":250,"column":8,"nodeType":"247","endLine":250,"endColumn":10,"suggestions":"264"},"react-hooks/rules-of-hooks","React Hook \"useState\" is called in function \"page\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","Identifier",["265"],["266"],["267"],["268"],"React Hook \"useEffect\" is called in function \"page\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".",["269"],"react-hooks/exhaustive-deps","The ref value 'videoRef.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'videoRef.current' to a variable inside the effect, and use that variable in the cleanup function.","React Hook useEffect has an unnecessary dependency: 'socket'. Either exclude it or remove the dependency array. Outer scope values like 'socket' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["270"],["271"],["272"],"React Hook \"useRef\" is called in function \"page\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".",["273"],["274"],["275"],["276"],["277"],["278"],["279"],"React Hook useEffect has missing dependencies: 'currentPage' and 'setLoading'. Either include them or remove the dependency array.",["280"],"React Hook useEffect has a missing dependency: 'loadOrders'. Either include it or remove the dependency array.",["281"],"React Hook useEffect has a missing dependency: 'token.accessToken'. Either include it or remove the dependency array.",["282"],{"kind":"283","justification":"284"},{"kind":"283","justification":"284"},{"kind":"283","justification":"284"},{"kind":"283","justification":"284"},{"kind":"283","justification":"284"},{"desc":"285","fix":"286"},{"desc":"285","fix":"287"},{"kind":"283","justification":"284"},{"kind":"283","justification":"284"},{"kind":"283","justification":"284"},{"kind":"283","justification":"284"},{"kind":"283","justification":"284"},{"kind":"283","justification":"284"},{"kind":"283","justification":"284"},{"kind":"283","justification":"284"},{"desc":"288","fix":"289"},{"desc":"290","fix":"291"},{"desc":"292","fix":"293"},"directive","","Update the dependencies array to be: []",{"range":"294","text":"295"},{"range":"296","text":"295"},"Update the dependencies array to be: [first, rows, globalFilterValue, render, setLoading, currentPage]",{"range":"297","text":"298"},"Update the dependencies array to be: [first, rows, search, render, loadOrders]",{"range":"299","text":"300"},"Update the dependencies array to be: [token.accessToken]",{"range":"301","text":"302"},[2036,2044],"[]",[2372,2380],[3160,3200],"[first, rows, globalFilterValue, render, setLoading, currentPage]",[1355,1384],"[first, rows, search, render, loadOrders]",[9060,9062],"[token.accessToken]"]